[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About The Penguins",
    "section": "",
    "text": "Adélie Penguins\n\nAdélie penguins, named after the wife of French explorer Jules Dumont d’Urville, are among the most easily recognizable penguin species, primarily found along the coast of Antarctica. Characterized by their distinctive tuxedo-like black and white plumage, these birds are noted for the white ring surrounding their eyes and their black heads. Adélie penguins are highly adapted to their aquatic lifestyle, with streamlined bodies and powerful flippers that make them excellent swimmers.\nEach austral summer, Adélie penguins engage in a remarkable breeding cycle. They return to the same nesting sites, often the same exact nest, and perform elaborate courtship rituals to attract and retain their mates. The nests are carefully constructed from stones, which can be a source of contention among penguins leading to fierce squabbles. The females typically lay two eggs, and both parents share incubation duties in shifts, braving the harsh Antarctic elements.\nDiet-wise, Adélies primarily feed on krill, small fish, and squid. Their foraging trips can be extensive, covering several kilometers in pursuit of food. Despite their cute appearance, Adélie penguins are tough survivors, perfectly evolved for one of Earth’s most extreme environments. Their population trends are closely studied by scientists as indicators of climate change due to their dependency on sea ice for breeding and feeding.\n\n\n\n\n\nChinstrap Penguins\n\nChinstrap penguins are aptly named for the narrow black band under their heads that makes it appear as though they are wearing a helmet. This distinguishing feature makes them one of the most easily identifiable penguin species. They are predominantly found on the islands of the Antarctic Ocean, with large colonies also present on the Antarctic Peninsula and South Sandwich Islands.\nRenowned for their aggressive temperament, especially during the breeding season, chinstrap penguins are fiercely territorial. They gather in some of the largest penguin colonies; for example, the colony on Deception Island, Antarctica, numbers over a million birds. These dense gatherings are a sight to behold, filled with constant noise and activity as penguins communicate vocally to bond with mates and ward off rivals.\nThe breeding season for chinstrap penguins begins in November. They build crude nests from stones on rocky beaches, where the female typically lays two eggs. Both parents share responsibilities for incubating the eggs and feeding the chicks, exhibiting remarkable teamwork. Their diet consists almost exclusively of krill, which they catch on diving expeditions that can take them deep below the icy waters.\nChinstrap penguins are among the most abundant penguins, but like many polar species, they face threats from climate change. The melting ice affects krill populations, impacting the food supply for chinstrap penguins, which could lead to declines in their numbers if trends continue.\n\n\n\n\n\nGentoo Penguins\n\nGentoo penguins are distinctive for their striking red-orange bills and the conspicuous white patches above their eyes. Residing further north than their Adélie and Chinstrap relatives, Gentoos are found on the Antarctic Peninsula and on numerous sub-Antarctic islands, making them the most northerly of the Antarctic penguins. This species is particularly known for its remarkable swimming ability; Gentoo penguins are the fastest underwater swimming birds, reaching speeds of up to 36 kilometers per hour.\nGentoo penguins are adaptable feeders, their diets vary significantly by location, season, and availability, consisting mainly of crustaceans such as krill, alongside fish and squid. This adaptability extends to their breeding habits. They are less bound to specific timing and can adjust their reproductive schedule according to environmental conditions. Gentoos are colonial nesters, building nests from stones, grass, and debris. They demonstrate strong site fidelity, returning to the same breeding sites year after year.\nBreeding season sees Gentoos forming large, noisy colonies, where both parents fervently guard their two eggs. Post-hatching, chicks are brooded and fed by both parents, who take turns foraging at sea. The ability of Gentoo penguins to breed more flexibly in response to variable ice conditions gives them a potential advantage over other species in the face of rapidly changing climates. Their population is currently stable, though continued environmental changes pose a looming threat."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Palmer Penguin Exploratory Data Analysis",
    "section": "",
    "text": "Code\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(dbplyr)\nlibrary(ggplot2)\nlibrary(DBI)\nlibrary(duckdb)\n\n# Connect to the database\ncon &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\n\n# Write the penguins table to the database\nDBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)\ndf &lt;- dplyr::tbl(con, \"penguins\")\n\n\n\n\nSummary Table\n\n\n\nCode\n# Summary statistics by species and sex\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n    )\n  ) %&gt;%\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\n\n\n\nOrganize and Orient: The Palmer Penguins are now organized by species and sex (NA in instances where sex data was not available), so that data on bill length, bill depth, flipper length, and body mass can be seen for each species/sex combination.\n\n\nBody Mass Explained by Bill Length\n\n\n\nCode\n# Scatter plot with linear regression\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nBigger Bills, Bigger Body: Applying a linear regression to the Penguins’ body mass explained by bill length suggests a positive correlation. There are, however, a few odd ducks in there with disproportionately large bills. Poor fellas. I wonder if they struggle with balance issues.\n\n\nFlipper Length By Species\n\n\n\nCode\n# Distribution of flipper length\ndf %&gt;%\n  ggplot(aes(x = flipper_length_mm)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  facet_wrap(~species)\n\n\n\n\n\n\n\n\n\nThe Gentoos Are Fillin’ Their Socks: Using a histogram to visualize the distribution of flipper lengths by species lends some insight as to how flipper lengths might be useful in predicting the penguin species. So far we’ve got a general trend of relatively larger Gentoos (with respect to body mass and flipper size) and relatively smaller Chinstraps and Adélies. As of now, it looks like the Gentoos won’t be joining the Chinstraps and Adélies in their bulk order of Chinstrap/Adélie-sized penguin shoes.\n\n\nBody Mass by Species and Sex\n\n\n\nCode\n# Box plots for body mass by species and sex\ndf %&gt;%\n  ggplot(aes(x = species, y = body_mass_g, fill = sex)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n\n\nThe Dudes Are Taking Up Too Much Space: The box plots seem to be suggesting that on average, the male penguins are larger in body mass compared to the females. Interestingly, I’m compelled to believe that most of the penguins with unidentified genders are females. Sneaky, sneaky.\n\n\nBill Length by Species and Sex\n\n\n\nCode\n# Density plots for bill length by species and sex\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, fill = interaction(species, sex), alpha = 0.5)) +\n  geom_density() +\n  labs(x = \"Bill Length (mm)\", y = \"Density\") +\n  scale_fill_brewer(palette = \"Set1\") +  # Color palette for better distinction\n  theme_minimal() +\n  guides(fill = guide_legend(title = \"Species and Sex\"))  # Add legend title\n\n\n\n\n\n\n\n\n\nThe Dudes Also Just Be Talking: Corroborating some of the data explored above on bill length, we see that the Chinstraps and Gentoos have similarly longer bills, with Adélies slightly smaller. Male penguins also, apparently, have bigger mouths on average than their female counterparts. Do male penguins mansplain? Penguin-splain? I don’t know.\n\n\n\nCode\n# Disconnect from the database\nDBI::dbDisconnect(con)"
  },
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "Get some information",
    "text": "Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.26972093939\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]"
  },
  {
    "objectID": "model.html#turn-into-vetiver-model",
    "href": "model.html#turn-into-vetiver-model",
    "title": "Model",
    "section": "Turn into Vetiver Model",
    "text": "Turn into Vetiver Model\n\n\nCode\nfrom vetiver import VetiverModel\nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)"
  },
  {
    "objectID": "model.html#save-to-board",
    "href": "model.html#save-to-board",
    "title": "Model",
    "section": "Save to Board",
    "text": "Save to Board\n\n\nCode\nfrom IPython.utils.io import capture_output\n\nwith capture_output(stdout=True, stderr=True, display=False):\n  \n  from pins import board_folder\n  from vetiver import vetiver_pin_write\n\n  model_board = board_folder(\"./data/model\", allow_pickle_read = True)\n  vetiver_pin_write(model_board, v)"
  },
  {
    "objectID": "model.html#turn-model-into-api",
    "href": "model.html#turn-model-into-api",
    "title": "Model",
    "section": "Turn model into API",
    "text": "Turn model into API\n\n\nCode\nfrom vetiver import VetiverAPI\napp = VetiverAPI(v, check_prototype = True)"
  },
  {
    "objectID": "model.html#creating-dockerfile",
    "href": "model.html#creating-dockerfile",
    "title": "Model",
    "section": "Creating Dockerfile",
    "text": "Creating Dockerfile\n\n\nCode\n#from vetiver import prepare_docker\n#prepare_docker(model_board, \"penguin_model\")"
  },
  {
    "objectID": "flipper-predict.html",
    "href": "flipper-predict.html",
    "title": "Penguin Flipper Length Prediction Model",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom palmerpenguins import penguins\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import OneHotEncoder\nfrom vetiver import VetiverModel, vetiver_pin_write\nimport pins\nfrom pathlib import Path\n\n# Assuming the data is available in a CSV file in the current working directory\ndf = df = penguins.load_penguins().dropna()\n\n# Display the first few rows of the dataframe\ndf.head()\n\n# Drop rows with missing values\ndf = df.dropna(subset=[\"flipper_length_mm\", \"body_mass_g\", \"species\", \"sex\"])\n\n# One-hot encode categorical variables\nencoder = OneHotEncoder()\nencoded_data = encoder.fit_transform(df[['species', 'sex']])\nencoded_df = pd.DataFrame(encoded_data, columns=encoder.get_feature_names(['species', 'sex']))\n\n# Combine with numeric data\nX = pd.concat([df[['body_mass_g']], encoded_df], axis=1)\ny = df['flipper_length_mm']\n\n# Display the processed features\nX.head()\n\n# Split data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Fit a linear regression model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Predict on the test set and calculate RMSE\ny_pred = model.predict(X_test)\nrmse = np.sqrt(mean_squared_error(y_test, y_pred))\nprint(f\"Test RMSE: {rmse}\")\n\n# Create a VetiverModel object\nvetiver_model = VetiverModel(model, model_name=\"penguin_flipper_model\", prototype_data=X_train)\n\n# Specify the board folder\nmodel_board = pins.board_folder(\"data/model\", allow_pickle_read=True)\n\n# Write the model to the board\nvetiver_pin_write(model_board, vetiver_model)\n\nfrom vetiver import VetiverAPI\napp = VetiverAPI(vetiver_model)\n\n# Run the API in a development server if this script is executed directly\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app.app, host=\"127.0.0.1\", port=8080)"
  },
  {
    "objectID": "model-db.html",
    "href": "model-db.html",
    "title": "Penguins Model",
    "section": "",
    "text": "Code\nimport duckdb\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing"
  },
  {
    "objectID": "model-db.html#get-data",
    "href": "model-db.html#get-data",
    "title": "Penguins Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ncon = duckdb.connect('my-db.duckdb')\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\ncon.close()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007"
  },
  {
    "objectID": "model-db.html#define-model-and-fit",
    "href": "model-db.html#define-model-and-fit",
    "title": "Penguins Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model-db.html#get-some-information",
    "href": "model-db.html#get-some-information",
    "title": "Penguins Model",
    "section": "Get some information",
    "text": "Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.26972093939\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]"
  }
]